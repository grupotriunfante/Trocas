<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registro de Troca de Produtos</title>
    <style>
        /* Estilos Gerais */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 15px;
            background-color: #f4f7f6;
            color: #333;
            line-height: 1.6;
        }

        /* Container para o Título, Código e Imagens */
        .header-container {
            display: flex;
            align-items: center; /* Alinha verticalmente os itens */
            flex-wrap: wrap;
            margin-bottom: 20px;
            padding: 0 15px;
            position: relative; /* Para posicionar as imagens absolutas */
        }

        .logo {
            height: 50px; /* Ajuste o tamanho conforme necessário */
            margin-right: 10px; /* Espaço entre as logos */
        }

        .logo.right-margin {
            margin-right: 20px; /* Mais espaço para a segunda logo */
        }

        .title-and-code {
            display: flex;
            flex-direction: column; /* Título e código empilhados em telas maiores */
            align-items: flex-start; /* Alinha o texto à esquerda */
            flex-grow: 1;
        }

        h1 {
            color: #2c3e50;
            text-align: left;
            margin-bottom: 0;
            font-size: 2em;
            border-bottom: 2px solid #3498db;
            padding-bottom: 10px;
            width: fit-content; /* Para a borda se ajustar ao texto */
        }

        .sig-code {
            color: #555;
            font-size: 0.9em;
            font-weight: bold;
            white-space: nowrap;
            margin-top: 5px; /* Espaço entre o título e o código SIG */
        }

        /* Estilos do Formulário */
        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid #e0e0e0;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #34495e;
            font-size: 1em;
        }

        input[type="text"],
        input[type="number"],
        input[type="email"],
        select,
        textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
            font-size: 1em;
            transition: border-color 0.3s ease-in-out;
        }

        input[type="text"]:focus,
        input[type="number"]:focus,
        input[type="email"]:focus,
        select:focus,
        textarea:focus {
            border-color: #3498db;
            outline: none;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
        }

        input[type="file"] {
            display: block;
            margin-bottom: 20px;
            padding: 8px 0;
            width: 100%;
            box-sizing: border-box;
        }

        input[type="text"][readonly] {
            background-color: #e9ecef;
            color: #6c757d;
            cursor: not-allowed;
        }

        small {
            display: block;
            margin-top: -15px;
            margin-bottom: 15px;
            color: #777;
            font-size: 0.9em;
        }

        /* Estilo do Botão */
        button {
            background-color: #28a745;
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.1em;
            font-weight: bold;
            width: 100%;
            transition: background-color 0.3s ease-in-out, transform 0.2s ease;
        }

        button:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

        /* Mensagem de Status */
        #statusMessage {
            margin-top: 25px;
            padding: 15px;
            border-radius: 5px;
            background-color: #e9f7ef;
            border: 1px solid #d4edda;
            color: #155724;
            text-align: center;
            font-weight: bold;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        /* Media Queries para Responsividade */
        @media (max-width: 768px) {
            body {
                padding: 10px;
            }

            .header-container {
                flex-direction: column; /* Empilha tudo em telas pequenas */
                align-items: center; /* Centraliza horizontalmente */
                margin-bottom: 15px;
                padding: 0;
            }

            .logo {
                height: 40px; /* Reduz o tamanho da logo em mobile */
                margin-bottom: 10px; /* Espaço abaixo das logos */
                margin-right: 0; /* Remove margem direita em mobile */
            }

            .logo.right-margin {
                margin-right: 0; /* Remove margem direita extra */
            }

            .title-and-code {
                align-items: center; /* Centraliza o título e o código quando empilhados */
            }

            h1 {
                text-align: center;
                font-size: 1.6em; /* Ajusta o tamanho da fonte */
                width: 100%;
                padding-bottom: 5px;
                margin-bottom: 5px; /* Espaço entre o título e o código SIG */
            }

            .sig-code {
                width: 100%;
                text-align: center;
                margin-top: 0; /* Remove espaço extra */
                font-size: 0.8em;
            }

            form {
                margin: 10px auto;
                padding: 15px;
            }

            label {
                font-size: 0.95em;
            }

            input[type="text"],
            input[type="number"],
            input[type="email"],
            select,
            textarea {
                padding: 8px;
                margin-bottom: 15px;
            }

            button {
                padding: 10px 15px;
                font-size: 1em;
            }

            #statusMessage {
                padding: 10px;
                font-size: 0.9em;
            }
        }
    </style>
</head>
<body>

    <div class="header-container">
        <img src="https://i.imgur.com/x5yvEo7.png" alt="Logo 1" class="logo">
        <img src="http://i.imgur.com/Fln53Oi.png" alt="Logo 2" class="logo right-margin">
        <div class="title-and-code">
            <h1>Registro de Troca de Produtos</h1>
            <span class="sig-code">SIG-FOR-007</span>
        </div>
    </div>

    <form id="registroForm">
        <label for="codigoTroca">Código da Troca:</label>
        <input type="text" id="codigoTroca" value="" readonly>
        <small>Será gerado automaticamente.</small>

        <label for="seuNome">Seu Nome:</label>
        <input type="text" id="seuNome" required>

        <label for="unidade">Qual sua unidade?</label>
        <select id="unidade" required>
            <option value="">Selecione...</option>
            <option value="TPH">TPH</option>
            <option value="API">API</option>
            <option value="MCD">MCD</option>
            <option value="TCG">TCG</option>
            <option value="TCA">TCA</option>
            <option value="TBL">TBL</option>
            <option value="TCV">TCV</option>
            <option value="TSJ">TSJ</option>
            <option value="ABC">ABC</option>
            <option value="TPA">TPA</option>
            <option value="TBA">TBA</option>
        </select>

        <label for="contatoCliente">Email ou Telefone do Cliente:</label>
        <input type="text" id="contatoCliente" required>

        <label for="cidade">Cidade:</label>
        <input type="text" id="cidade" required>

        <label for="cliente">Cliente:</label>
        <input type="text" id="cliente" required>

        <label for="cnpj">CNPJ:</label>
        <input type="text" id="cnpj" pattern="[0-9]{2}\.?[0-9]{3}\.?[0-9]{3}\/?[0-9]{4}\-?[0-9]{2}" placeholder="Ex: 00.000.000/0000-00" title="Formato: 00.000.000/0000-00 ou apenas números" required>

        <label for="valorTroca">Valor da Troca (R$):</label>
        <input type="number" id="valorTroca" step="0.01" required>

        <label for="fotoPapeleta">Foto da papeleta preenchida e assinada por vendedor e cliente:</label>
        <input type="file" id="fotoPapeleta" accept="image/*" capture="environment" required>

        <label for="quantidadeProdutos">Informe a quantidade de produtos (volume):</label>
        <input type="number" id="quantidadeProdutos" min="1" required>

        <label for="fotoCaixaLacrada">Enviar uma foto com a caixa lacrada pela fita triunfante e papeleta na caixa:</label>
        <input type="file" id="fotoCaixaLacrada" accept="image/*" capture="environment" required>

        <button type="submit">Registrar Troca</button>
    </form>

    <p id="statusMessage"></p>

    <script>
        // Função para gerar o código aleatório TRC-XXXX
        function generateRandomCode() {
            const randomNum = Math.floor(1000 + Math.random() * 9000); // Gera um número entre 1000 e 9999
            return `TRC-${randomNum}`;
        }

        // Define o código aleatório ao carregar a página
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('codigoTroca').value = generateRandomCode();
        });

        document.getElementById('registroForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            const statusMessage = document.getElementById('statusMessage');
            statusMessage.textContent = 'Enviando dados... Por favor, aguarde.';
            statusMessage.style.backgroundColor = '#fff3cd'; // Cor de fundo para "enviando"
            statusMessage.style.color = '#856404'; // Cor do texto para "enviando"
            statusMessage.style.borderColor = '#ffeeba'; // Cor da borda para "enviando"


            // Coleta todos os dados do formulário
            const codigoTroca = document.getElementById('codigoTroca').value;
            const seuNome = document.getElementById('seuNome').value;
            const unidade = document.getElementById('unidade').value;
            const contatoCliente = document.getElementById('contatoCliente').value;
            const cidade = document.getElementById('cidade').value;
            const cliente = document.getElementById('cliente').value;
            const cnpj = document.getElementById('cnpj').value;
            const valorTroca = document.getElementById('valorTroca').value;
            const quantidadeProdutos = document.getElementById('quantidadeProdutos').value;

            const fotoPapeletaInput = document.getElementById('fotoPapeleta');
            const fotoCaixaLacradaInput = document.getElementById('fotoCaixaLacrada');

            const fotoPapeletaFile = fotoPapeletaInput.files[0];
            const fotoCaixaLacradaFile = fotoCaixaLacradaInput.files[0];

            if (!fotoPapeletaFile || !fotoCaixaLacradaFile) {
                statusMessage.textContent = 'Erro: Por favor, selecione ambas as imagens.';
                statusMessage.style.backgroundColor = '#f8d7da'; // Cor de fundo para erro
                statusMessage.style.color = '#721c24'; // Cor do texto para erro
                statusMessage.style.borderColor = '#f5c6cb'; // Cor da borda para erro
                return;
            }

            // Função para ler arquivo como Base64
            const readFileAsBase64 = (file) => {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = () => resolve(reader.result.split(',')[1]); // Pega apenas a parte base64
                    reader.onerror = error => reject(error);
                    reader.readAsDataURL(file);
                });
            };

            try {
                const base64Papeleta = await readFileAsBase64(fotoPapeletaFile);
                const base64CaixaLacrada = await readFileAsBase64(fotoCaixaLacradaFile);

                // URL do seu script web app (substitua pela sua URL de implantação)
                const scriptUrl = 'https://script.google.com/macros/s/AKfycbwFCKjEhUYZwW31vJJt_4cAwmRifcSJWnt9lsaNyrh8OOBOgdxmkqff7cbsMZRFp1aRcA/exec'; // <-- IMPORTANTE: SUBSTITUA PELA SUA URL

                const params = new URLSearchParams({
                    codigoTroca: codigoTroca,
                    seuNome: seuNome,
                    unidade: unidade,
                    contatoCliente: contatoCliente,
                    cidade: cidade,
                    cliente: cliente,
                    cnpj: cnpj,
                    valorTroca: valorTroca,
                    quantidadeProdutos: quantidadeProdutos,

                    // Dados da primeira imagem (papeleta)
                    fileNamePapeleta: fotoPapeletaFile.name,
                    mimeTypePapeleta: fotoPapeletaFile.type,
                    dataPapeleta: base64Papeleta,

                    // Dados da segunda imagem (caixa lacrada)
                    fileNameCaixaLacrada: fotoCaixaLacradaFile.name,
                    mimeTypeCaixaLacrada: fotoCaixaLacradaFile.type,
                    dataCaixaLacrada: base64CaixaLacrada
                }).toString();

                const response = await fetch(scriptUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: params
                });

                const data = await response.text();
                statusMessage.textContent = data;
                // Verifica se a mensagem de sucesso está presente para mudar a cor
                if (data.includes("sucesso")) {
                    statusMessage.style.backgroundColor = '#d4edda'; // Cor de fundo para sucesso
                    statusMessage.style.color = '#155724'; // Cor do texto para sucesso
                    statusMessage.style.borderColor = '#c3e6cb'; // Cor da borda para sucesso
                } else {
                    statusMessage.style.backgroundColor = '#f8d7da'; // Cor de fundo para erro
                    statusMessage.style.color = '#721c24'; // Cor do texto para erro
                    statusMessage.style.borderColor = '#f5c6cb'; // Cor da borda para erro
                }

                document.getElementById('registroForm').reset(); // Limpa o formulário
                document.getElementById('codigoTroca').value = generateRandomCode(); // Gera um novo código para o próximo registro

            } catch (error) {
                statusMessage.textContent = 'Erro ao enviar: ' + error.message;
                statusMessage.style.backgroundColor = '#f8d7da'; // Cor de fundo para erro
                statusMessage.style.color = '#721c24'; // Cor do texto para erro
                statusMessage.style.borderColor = '#f5c6cb'; // Cor da borda para erro
                console.error('Erro:', error);
            }
        });
    </script>

</body>
</html>
